{
	"id": "86eac07394401ad6e0bcbacdeb4f672f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/20_Denial.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\";\n\ncontract Denial {\n\n    using SafeMath for uint256;\n    address public partner; // withdrawal partner - pay the gas, split the withdraw\n    address payable public constant owner = address(0xA9E);\n    uint timeLastWithdrawn;\n    mapping(address => uint) withdrawPartnerBalances; // keep track of partners balances\n\n    function setWithdrawPartner(address _partner) public {\n        partner = _partner;\n    }\n\n    // withdraw 1% to recipient and 1% to owner\n    function withdraw() public {\n        uint amountToSend = address(this).balance.div(100);\n        // perform a call without checking return\n        // The recipient can revert, the owner will still get their share\n        partner.call{value:amountToSend}(\"\");\n        owner.transfer(amountToSend);\n        // keep track of last withdrawal time\n        timeLastWithdrawn = now;\n        withdrawPartnerBalances[partner] = withdrawPartnerBalances[partner].add(amountToSend);\n    }\n\n    // allow deposit of funds\n    receive() external payable {}\n\n    // convenience function\n    function contractBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n\ncontract Attack{\n    Denial target;\n    constructor(Denial _target)public {\n        target= _target;\n    }\n\n    function attack()public payable  {\n        target.setWithdrawPartner(address(this));\n    }\n}"
			},
			"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209cd094374b5747291b5810f259237b2f6bd03c2158d099c5c9bc3c9c4483afa964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cd094374b5747291b5810f259237b2f6bd03c2158d099c5c9bc3c9c4483afa964736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xD0 SWAP5 CALLDATACOPY 0x4B JUMPI SELFBALANCE 0x29 SHL PC LT CALLCODE MSIZE 0x23 PUSH28 0x2F6BD03C2158D099C5C9BC3C9C4483AFA964736F6C634300060C0033 ",
							"sourceMap": "630:6594:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cd094374b5747291b5810f259237b2f6bd03c2158d099c5c9bc3c9c4483afa964736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xD0 SWAP5 CALLDATACOPY 0x4B JUMPI SELFBALANCE 0x29 SHL PC LT CALLCODE MSIZE 0x23 PUSH28 0x2F6BD03C2158D099C5C9BC3C9C4483AFA964736F6C634300060C0033 ",
							"sourceMap": "630:6594:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cd094374b5747291b5810f259237b2f6bd03c2158d099c5c9bc3c9c4483afa964736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/20_Denial.sol": {
				"Attack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract Denial",
									"name": "_target",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "attack",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/20_Denial.sol\":1254:1458  contract Attack{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/20_Denial.sol\":1294:1360  constructor(Denial _target)public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/20_Denial.sol\":1346:1353  _target */\n  dup1\n    /* \"contracts/20_Denial.sol\":1338:1344  target */\n  0x00\n  dup1\n    /* \"contracts/20_Denial.sol\":1338:1353  target= _target */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/20_Denial.sol\":1294:1360  constructor(Denial _target)public {... */\n  pop\n    /* \"contracts/20_Denial.sol\":1254:1458  contract Attack{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/20_Denial.sol\":1254:1458  contract Attack{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e5faafc\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/20_Denial.sol\":1366:1456  function attack()public payable  {... */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      stop\n    tag_4:\n        /* \"contracts/20_Denial.sol\":1409:1415  target */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/20_Denial.sol\":1409:1434  target.setWithdrawPartner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4e1c5914\n        /* \"contracts/20_Denial.sol\":1443:1447  this */\n      address\n        /* \"contracts/20_Denial.sol\":1409:1449  target.setWithdrawPartner(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_8\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_8:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/20_Denial.sol\":1366:1456  function attack()public payable  {... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d607bda8736c1082e700f5b268d6cd49c6cd702effb82c09743b63fd9feff89164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516101943803806101948339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610100806100946000396000f3fe608060405260043610601c5760003560e01c80639e5faafc146021575b600080fd5b60276029565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e1c5914306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801560b157600080fd5b505af115801560c4573d6000803e3d6000fd5b5050505056fea2646970667358221220d607bda8736c1082e700f5b268d6cd49c6cd702effb82c09743b63fd9feff89164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x194 CODESIZE SUB DUP1 PUSH2 0x194 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x100 DUP1 PUSH2 0x94 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5FAAFC EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x27 PUSH1 0x29 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E1C5914 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH1 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH1 0xC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 SMOD 0xBD 0xA8 PUSH20 0x6C1082E700F5B268D6CD49C6CD702EFFB82C0974 EXTCODESIZE PUSH4 0xFD9FEFF8 SWAP2 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1254:204:1:-:0;;;1294:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1346:7;1338:6;;:15;;;;;;;;;;;;;;;;;;1294:66;1254:204;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601c5760003560e01c80639e5faafc146021575b600080fd5b60276029565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e1c5914306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801560b157600080fd5b505af115801560c4573d6000803e3d6000fd5b5050505056fea2646970667358221220d607bda8736c1082e700f5b268d6cd49c6cd702effb82c09743b63fd9feff89164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5FAAFC EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x27 PUSH1 0x29 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E1C5914 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH1 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH1 0xC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 SMOD 0xBD 0xA8 PUSH20 0x6C1082E700F5B268D6CD49C6CD702EFFB82C0974 EXTCODESIZE PUSH4 0xFD9FEFF8 SWAP2 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1254:204:1:-:0;;;;;;;;;;;;;;;;;;;;;1366:90;;;:::i;:::-;;;1409:6;;;;;;;;;;:25;;;1443:4;1409:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1366:90::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "51200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"attack()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1254,
									"end": 1458,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1254,
									"end": 1458,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1254,
									"end": 1458,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1346,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1338,
									"end": 1344,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1458,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1254,
									"end": 1458,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1458,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1254,
									"end": 1458,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1254,
									"end": 1458,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1458,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1254,
									"end": 1458,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d607bda8736c1082e700f5b268d6cd49c6cd702effb82c09743b63fd9feff89164736f6c634300060c0033",
									".code": [
										{
											"begin": 1254,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "9E5FAAFC"
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1456,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1366,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1366,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1366,
											"end": 1456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1456,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1366,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1456,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1456,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1366,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1434,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1434,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1434,
											"name": "PUSH",
											"source": 1,
											"value": "4E1C5914"
										},
										{
											"begin": 1443,
											"end": 1447,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1456,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"attack()": "9e5faafc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Denial\",\"name\":\"_target\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/20_Denial.sol\":\"Attack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"contracts/20_Denial.sol\":{\"keccak256\":\"0x7b0f5ca9348bd7c42c790de6ffac32760b3e36863ad2a68846ec2d03cbd398ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09b0bf4f0366eab1797055cf65c85f2e21104679fe4d7b5054510fbe480ff526\",\"dweb:/ipfs/QmUffVmZoZE2gDe5yZt2L82ge5tUWCNQ9WddKj5qE4mVmA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 447,
								"contract": "contracts/20_Denial.sol:Attack",
								"label": "target",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(Denial)445"
							}
						],
						"types": {
							"t_contract(Denial)445": {
								"encoding": "inplace",
								"label": "contract Denial",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Denial": {
					"abi": [
						{
							"inputs": [],
							"name": "contractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "partner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_partner",
									"type": "address"
								}
							],
							"name": "setWithdrawPartner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/20_Denial.sol\":117:1252  contract Denial {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/20_Denial.sol\":117:1252  contract Denial {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4e1c5914\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8b7afe2e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xbe10862b\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/20_Denial.sol\":576:1052  function withdraw() public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/20_Denial.sol\":434:522  function setWithdrawPartner(address _partner) public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/20_Denial.sol\":1151:1250  function contractBalance() public view returns (uint) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/20_Denial.sol\":256:310  address payable public constant owner = address(0xA9E) */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/20_Denial.sol\":172:194  address public partner */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/20_Denial.sol\":576:1052  function withdraw() public {... */\n    tag_12:\n        /* \"contracts/20_Denial.sol\":613:630  uint amountToSend */\n      0x00\n        /* \"contracts/20_Denial.sol\":633:663  address(this).balance.div(100) */\n      tag_27\n        /* \"contracts/20_Denial.sol\":659:662  100 */\n      0x64\n        /* \"contracts/20_Denial.sol\":633:654  address(this).balance */\n      selfbalance\n        /* \"contracts/20_Denial.sol\":633:658  address(this).balance.div */\n      tag_28\n      swap1\n        /* \"contracts/20_Denial.sol\":633:663  address(this).balance.div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_27:\n        /* \"contracts/20_Denial.sol\":613:663  uint amountToSend = address(this).balance.div(100) */\n      swap1\n      pop\n        /* \"contracts/20_Denial.sol\":797:804  partner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/20_Denial.sol\":797:809  partner.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/20_Denial.sol\":816:828  amountToSend */\n      dup2\n        /* \"contracts/20_Denial.sol\":797:833  partner.call{value:amountToSend}(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_31\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_30)\n    tag_31:\n      0x60\n      swap2\n      pop\n    tag_30:\n      pop\n      pop\n      pop\n        /* \"contracts/20_Denial.sol\":304:309  0xA9E */\n      0x0a9e\n        /* \"contracts/20_Denial.sol\":843:857  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/20_Denial.sol\":843:871  owner.transfer(amountToSend) */\n      0x08fc\n        /* \"contracts/20_Denial.sol\":858:870  amountToSend */\n      dup3\n        /* \"contracts/20_Denial.sol\":843:871  owner.transfer(amountToSend) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n        /* \"contracts/20_Denial.sol\":947:950  now */\n      timestamp\n        /* \"contracts/20_Denial.sol\":927:944  timeLastWithdrawn */\n      0x01\n        /* \"contracts/20_Denial.sol\":927:950  timeLastWithdrawn = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/20_Denial.sol\":995:1045  withdrawPartnerBalances[partner].add(amountToSend) */\n      tag_34\n        /* \"contracts/20_Denial.sol\":1032:1044  amountToSend */\n      dup2\n        /* \"contracts/20_Denial.sol\":995:1018  withdrawPartnerBalances */\n      0x02\n        /* \"contracts/20_Denial.sol\":995:1027  withdrawPartnerBalances[partner] */\n      0x00\n        /* \"contracts/20_Denial.sol\":1019:1026  partner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/20_Denial.sol\":995:1027  withdrawPartnerBalances[partner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/20_Denial.sol\":995:1031  withdrawPartnerBalances[partner].add */\n      tag_35\n      swap1\n        /* \"contracts/20_Denial.sol\":995:1045  withdrawPartnerBalances[partner].add(amountToSend) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_34:\n        /* \"contracts/20_Denial.sol\":960:983  withdrawPartnerBalances */\n      0x02\n        /* \"contracts/20_Denial.sol\":960:992  withdrawPartnerBalances[partner] */\n      0x00\n        /* \"contracts/20_Denial.sol\":984:991  partner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/20_Denial.sol\":960:992  withdrawPartnerBalances[partner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/20_Denial.sol\":960:1045  withdrawPartnerBalances[partner] = withdrawPartnerBalances[partner].add(amountToSend) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/20_Denial.sol\":576:1052  function withdraw() public {... */\n      pop\n      jump\t// out\n        /* \"contracts/20_Denial.sol\":434:522  function setWithdrawPartner(address _partner) public {... */\n    tag_16:\n        /* \"contracts/20_Denial.sol\":507:515  _partner */\n      dup1\n        /* \"contracts/20_Denial.sol\":497:504  partner */\n      0x00\n      dup1\n        /* \"contracts/20_Denial.sol\":497:515  partner = _partner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/20_Denial.sol\":434:522  function setWithdrawPartner(address _partner) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/20_Denial.sol\":1151:1250  function contractBalance() public view returns (uint) {... */\n    tag_19:\n        /* \"contracts/20_Denial.sol\":1199:1203  uint */\n      0x00\n        /* \"contracts/20_Denial.sol\":1222:1243  address(this).balance */\n      selfbalance\n        /* \"contracts/20_Denial.sol\":1215:1243  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/20_Denial.sol\":1151:1250  function contractBalance() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/20_Denial.sol\":256:310  address payable public constant owner = address(0xA9E) */\n    tag_22:\n        /* \"contracts/20_Denial.sol\":304:309  0xA9E */\n      0x0a9e\n        /* \"contracts/20_Denial.sol\":256:310  address payable public constant owner = address(0xA9E) */\n      dup2\n      jump\t// out\n        /* \"contracts/20_Denial.sol\":172:194  address public partner */\n    tag_25:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4275:4282  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4306:4307  0 */\n      dup1\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4302:4303  b */\n      dup3\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4302:4307  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4294:4338  require(b > 0, \"SafeMath: division by zero\") */\n      tag_39\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_39:\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4359:4360  b */\n      dup2\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4355:4356  a */\n      dup4\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4355:4360  a / b */\n      dup2\n      tag_40\n      jumpi\n      invalid\n    tag_40:\n      div\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4348:4360  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201c133155b3d95c9ecd1529cb9fc450e450807a2309449186f3e3ce8a344a2bcb64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506104f3806100206000396000f3fe60806040526004361061004e5760003560e01c80633ccfd60b1461005a5780634e1c5914146100715780638b7afe2e146100c25780638da5cb5b146100ed578063be10862b1461012e57610055565b3661005557005b600080fd5b34801561006657600080fd5b5061006f61016f565b005b34801561007d57600080fd5b506100c06004803603602081101561009457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610337565b005b3480156100ce57600080fd5b506100d761037a565b6040518082815260200191505060405180910390f35b3480156100f957600080fd5b50610102610382565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013a57600080fd5b50610143610388565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006101856064476103ac90919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168160405180600001905060006040518083038185875af1925050503d8060008114610205576040519150601f19603f3d011682016040523d82523d6000602084013e61020a565b606091505b505050610a9e73ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610255573d6000803e3d6000fd5b50426001819055506102d081600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461043590919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600047905090565b610a9e81565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808211610423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b81838161042c57fe5b04905092915050565b6000808284019050838110156104b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea26469706673582212201c133155b3d95c9ecd1529cb9fc450e450807a2309449186f3e3ce8a344a2bcb64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x4E1C5914 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8B7AFE2E EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xBE10862B EQ PUSH2 0x12E JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x16F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x337 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x185 PUSH1 0x64 SELFBALANCE PUSH2 0x3AC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH2 0xA9E PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x255 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x2D0 DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x435 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA9E DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x42C JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SGT BALANCE SSTORE 0xB3 0xD9 0x5C SWAP15 0xCD ISZERO 0x29 0xCB SWAP16 0xC4 POP 0xE4 POP DUP1 PUSH27 0x2309449186F3E3CE8A344A2BCB64736F6C634300060C0033000000 ",
							"sourceMap": "117:1135:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004e5760003560e01c80633ccfd60b1461005a5780634e1c5914146100715780638b7afe2e146100c25780638da5cb5b146100ed578063be10862b1461012e57610055565b3661005557005b600080fd5b34801561006657600080fd5b5061006f61016f565b005b34801561007d57600080fd5b506100c06004803603602081101561009457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610337565b005b3480156100ce57600080fd5b506100d761037a565b6040518082815260200191505060405180910390f35b3480156100f957600080fd5b50610102610382565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013a57600080fd5b50610143610388565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006101856064476103ac90919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168160405180600001905060006040518083038185875af1925050503d8060008114610205576040519150601f19603f3d011682016040523d82523d6000602084013e61020a565b606091505b505050610a9e73ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610255573d6000803e3d6000fd5b50426001819055506102d081600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461043590919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600047905090565b610a9e81565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808211610423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b81838161042c57fe5b04905092915050565b6000808284019050838110156104b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea26469706673582212201c133155b3d95c9ecd1529cb9fc450e450807a2309449186f3e3ce8a344a2bcb64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x4E1C5914 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8B7AFE2E EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xBE10862B EQ PUSH2 0x12E JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x16F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x337 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x185 PUSH1 0x64 SELFBALANCE PUSH2 0x3AC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH2 0xA9E PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x255 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x2D0 DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x435 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA9E DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x42C JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SGT BALANCE SSTORE 0xB3 0xD9 0x5C SWAP15 0xCD ISZERO 0x29 0xCB SWAP16 0xC4 POP 0xE4 POP DUP1 PUSH27 0x2309449186F3E3CE8A344A2BCB64736F6C634300060C0033000000 ",
							"sourceMap": "117:1135:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:476;;;;;;;;;;;;;:::i;:::-;;434:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1151:99;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;256:54;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;172:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;576:476;613:17;633:30;659:3;633:21;:25;;:30;;;;:::i;:::-;613:50;;797:7;;;;;;;;;;:12;;816;797:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:5;843:14;;:28;858:12;843:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:3;927:17;:23;;;;995:50;1032:12;995:23;:32;1019:7;;;;;;;;;;;995:32;;;;;;;;;;;;;;;;:36;;:50;;;;:::i;:::-;960:23;:32;984:7;;;;;;;;;;;960:32;;;;;;;;;;;;;;;:85;;;;576:476;:::o;434:88::-;507:8;497:7;;:18;;;;;;;;;;;;;;;;;;434:88;:::o;1151:99::-;1199:4;1222:21;1215:28;;1151:99;:::o;256:54::-;304:5;256:54;:::o;172:22::-;;;;;;;;;;;;:::o;4217:150:0:-;4275:7;4306:1;4302;:5;4294:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;4348:12;;4217:150;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "253400",
								"executionCost": "294",
								"totalCost": "253694"
							},
							"external": {
								"contractBalance()": "237",
								"owner()": "255",
								"partner()": "1110",
								"setWithdrawPartner(address)": "21101",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 1252,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1252,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c133155b3d95c9ecd1529cb9fc450e450807a2309449186f3e3ce8a344a2bcb64736f6c634300060c0033",
									".code": [
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "3CCFD60B"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "4E1C5914"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "8B7AFE2E"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "BE10862B"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1252,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 613,
											"end": 630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 659,
											"end": 662,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 633,
											"end": 654,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 633,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 633,
											"end": 658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 633,
											"end": 663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 633,
											"end": 663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 633,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 633,
											"end": 663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 633,
											"end": 663,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 633,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 633,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 613,
											"end": 663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 613,
											"end": 663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 804,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 797,
											"end": 804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 797,
											"end": 804,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 804,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 797,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 797,
											"end": 804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 797,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 797,
											"end": 809,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 816,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 797,
											"end": 833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 304,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "A9E"
										},
										{
											"begin": 843,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 843,
											"end": 857,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 858,
											"end": 870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 843,
											"end": 871,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 871,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 843,
											"end": 871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 947,
											"end": 950,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 927,
											"end": 944,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 927,
											"end": 950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 927,
											"end": 950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1032,
											"end": 1044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1018,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1027,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 995,
											"end": 1031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1045,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 995,
											"end": 1045,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1045,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 995,
											"end": 1045,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 995,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 960,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 960,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 991,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 984,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 984,
											"end": 991,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 984,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 984,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 984,
											"end": 991,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 984,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 984,
											"end": 991,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 984,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 984,
											"end": 991,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 960,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 960,
											"end": 992,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 960,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 960,
											"end": 992,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 960,
											"end": 992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 960,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 960,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 992,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 960,
											"end": 1045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 1045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 1045,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 960,
											"end": 1045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 576,
											"end": 1052,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 434,
											"end": 522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 507,
											"end": 515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 497,
											"end": 504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 497,
											"end": 515,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 515,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 522,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1243,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1250,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 304,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "A9E"
										},
										{
											"begin": 256,
											"end": 310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 172,
											"end": 194,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4307,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"contractBalance()": "8b7afe2e",
							"owner()": "8da5cb5b",
							"partner()": "be10862b",
							"setWithdrawPartner(address)": "4e1c5914",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"partner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_partner\",\"type\":\"address\"}],\"name\":\"setWithdrawPartner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/20_Denial.sol\":\"Denial\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"contracts/20_Denial.sol\":{\"keccak256\":\"0x7b0f5ca9348bd7c42c790de6ffac32760b3e36863ad2a68846ec2d03cbd398ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09b0bf4f0366eab1797055cf65c85f2e21104679fe4d7b5054510fbe480ff526\",\"dweb:/ipfs/QmUffVmZoZE2gDe5yZt2L82ge5tUWCNQ9WddKj5qE4mVmA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 362,
								"contract": "contracts/20_Denial.sol:Denial",
								"label": "partner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 370,
								"contract": "contracts/20_Denial.sol:Denial",
								"label": "timeLastWithdrawn",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 374,
								"contract": "contracts/20_Denial.sol:Denial",
								"label": "withdrawPartnerBalances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "contracts/20_Denial.sol:23:9: Warning: Return value of low-level calls not used.\n        partner.call{value:amountToSend}(\"\");\n        ^----------------------------------^\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 833,
					"file": "contracts/20_Denial.sol",
					"start": 797
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@v3.4.2/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							354
						]
					},
					"id": 355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 354,
							"linearizedBaseContracts": [
								354
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "865:98:0",
										"statements": [
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 32,
														"src": "875:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 14,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 16,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "887:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 17,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "891:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 20,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "906:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 21,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "910:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 27,
												"nodeType": "IfStatement",
												"src": "902:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 25,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 13,
													"id": 26,
													"nodeType": "Return",
													"src": "913:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 29,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "954:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 30,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 13,
												"id": 31,
												"nodeType": "Return",
												"src": "940:16:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "805:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "816:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "856:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:0"
									},
									"scope": 354,
									"src": "789:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1185:75:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1199:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 46,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1203:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 52,
												"nodeType": "IfStatement",
												"src": "1195:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 50,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 44,
													"id": 51,
													"nodeType": "Return",
													"src": "1206:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 54,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "1247:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 55,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1251:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 57,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 44,
												"id": 58,
												"nodeType": "Return",
												"src": "1233:20:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1125:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1136:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1170:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:0"
									},
									"scope": 354,
									"src": "1109:151:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1484:359:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 72,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1716:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 79,
												"nodeType": "IfStatement",
												"src": "1712:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 77,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 71,
													"id": 78,
													"nodeType": "Return",
													"src": "1724:16:0"
												}
											},
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 100,
														"src": "1750:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 80,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 85,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1762:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 83,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1766:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 86,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1781:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 87,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 89,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1790:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 95,
												"nodeType": "IfStatement",
												"src": "1777:33:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 93,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 71,
													"id": 94,
													"nodeType": "Return",
													"src": "1793:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 97,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1834:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 98,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 71,
												"id": 99,
												"nodeType": "Return",
												"src": "1820:16:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1424:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1435:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1469:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 67,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1475:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:0"
									},
									"scope": 354,
									"src": "1408:435:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "2068:76:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 113,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "2082:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2078:29:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 118,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 112,
													"id": 119,
													"nodeType": "Return",
													"src": "2090:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 122,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "2131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 123,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2135:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 125,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 112,
												"id": 126,
												"nodeType": "Return",
												"src": "2117:20:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2019:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2053:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2059:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:0"
									},
									"scope": 354,
									"src": "1992:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "2379:76:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "2393:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 147,
												"nodeType": "IfStatement",
												"src": "2389:29:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 145,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 139,
													"id": 146,
													"nodeType": "Return",
													"src": "2401:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 149,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "2442:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 150,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "2446:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 152,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 139,
												"id": 153,
												"nodeType": "Return",
												"src": "2428:20:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2319:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2330:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2364:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:0"
									},
									"scope": 354,
									"src": "2303:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "2757:108:0",
										"statements": [
											{
												"assignments": [
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 180,
														"src": "2767:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 170,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 167,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2779:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 168,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2783:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 172,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "2802:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 173,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2807:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 166,
													"src": "2857:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "2850:8:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2703:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2714:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:0"
									},
									"scope": 354,
									"src": "2690:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "3203:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 192,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "3221:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 193,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "3226:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3279:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "3283:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 201,
												"nodeType": "Return",
												"src": "3272:12:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "3149:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "3160:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "3194:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:0"
									},
									"scope": 354,
									"src": "3136:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3605:148:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 213,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3619:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 218,
												"nodeType": "IfStatement",
												"src": "3615:20:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 212,
													"id": 217,
													"nodeType": "Return",
													"src": "3627:8:0"
												}
											},
											{
												"assignments": [
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 236,
														"src": "3645:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 224,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 221,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3657:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 222,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3661:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 226,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "3680:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 227,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "3684:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 229,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "3689:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 234,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "3745:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 212,
												"id": 235,
												"nodeType": "Return",
												"src": "3738:8:0"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "3551:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "3562:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "3596:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:0"
									},
									"scope": 354,
									"src": "3538:215:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "4284:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 248,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "4302:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 254,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "4355:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 255,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "4359:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 257,
												"nodeType": "Return",
												"src": "4348:12:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "4230:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "4241:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "4275:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:0"
									},
									"scope": 354,
									"src": "4217:150:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "4887:81:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 270,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "4905:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 276,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "4956:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 277,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "4960:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 268,
												"id": 279,
												"nodeType": "Return",
												"src": "4949:12:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "4833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "4844:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "4878:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:0"
									},
									"scope": 354,
									"src": "4820:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "5527:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "5545:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 295,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "5550:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 297,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "5553:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "5583:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 301,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "5587:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 303,
												"nodeType": "Return",
												"src": "5576:12:0"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5445:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5456:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5467:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5518:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:0"
									},
									"scope": 354,
									"src": "5432:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "6347:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 318,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "6365:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 321,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "6372:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 324,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "6402:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 325,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "6406:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 316,
												"id": 327,
												"nodeType": "Return",
												"src": "6395:12:0"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6265:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6276:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6287:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6338:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:0"
									},
									"scope": 354,
									"src": "6252:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "7155:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 342,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "7173:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 345,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "7180:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 348,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "7210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 349,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "7214:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 351,
												"nodeType": "Return",
												"src": "7203:12:0"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7073:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7084:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7095:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7146:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:0"
									},
									"scope": 354,
									"src": "7060:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 355,
							"src": "630:6594:0"
						}
					],
					"src": "33:7192:0"
				},
				"id": 0
			},
			"contracts/20_Denial.sol": {
				"ast": {
					"absolutePath": "contracts/20_Denial.sol",
					"exportedSymbols": {
						"Attack": [
							471
						],
						"Denial": [
							445
						]
					},
					"id": 472,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 356,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts@v3.4.2/math/SafeMath.sol",
							"file": "@openzeppelin/contracts@v3.4.2/math/SafeMath.sol",
							"id": 357,
							"nodeType": "ImportDirective",
							"scope": 472,
							"sourceUnit": 355,
							"src": "57:58:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 445,
							"linearizedBaseContracts": [
								445
							],
							"name": "Denial",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 360,
									"libraryName": {
										"contractScope": null,
										"id": 358,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 354,
										"src": "146:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$354",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "140:27:1",
									"typeName": {
										"id": 359,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "159:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "be10862b",
									"id": 362,
									"mutability": "mutable",
									"name": "partner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 445,
									"src": "172:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 361,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "172:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8da5cb5b",
									"id": 368,
									"mutability": "constant",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 445,
									"src": "256:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 363,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "256:15:1",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "3078413945",
												"id": 366,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "304:5:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2718_by_1",
													"typeString": "int_const 2718"
												},
												"value": "0xA9E"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_2718_by_1",
													"typeString": "int_const 2718"
												}
											],
											"id": 365,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "296:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 364,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "296:7:1",
												"typeDescriptions": {
													"typeIdentifier": null,
													"typeString": null
												}
											}
										},
										"id": 367,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "296:14:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 370,
									"mutability": "mutable",
									"name": "timeLastWithdrawn",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 445,
									"src": "316:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 369,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "316:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 374,
									"mutability": "mutable",
									"name": "withdrawPartnerBalances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 445,
									"src": "344:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 373,
										"keyType": {
											"id": 371,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "352:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "344:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 372,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "363:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "487:35:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 379,
														"name": "partner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "497:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 380,
														"name": "_partner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "507:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "497:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "497:18:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4e1c5914",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setWithdrawPartner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "_partner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 384,
												"src": "462:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "461:18:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "487:0:1"
									},
									"scope": 445,
									"src": "434:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "603:449:1",
										"statements": [
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"mutability": "mutable",
														"name": "amountToSend",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 427,
														"src": "613:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 387,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "613:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "313030",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "659:3:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 391,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "641:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Denial_$445",
																			"typeString": "contract Denial"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Denial_$445",
																			"typeString": "contract Denial"
																		}
																	],
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "633:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 389,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "633:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "633:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "633:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 259,
														"src": "633:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "633:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "613:50:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "830:2:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 398,
																"name": "partner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "797:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "797:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 401,
																"name": "amountToSend",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "816:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "797:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "797:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "797:36:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 409,
															"name": "amountToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "858:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 406,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "843:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "843:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "843:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "843:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 412,
														"name": "timeLastWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "927:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 413,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -17,
														"src": "947:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "927:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "927:23:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 416,
															"name": "withdrawPartnerBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "960:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 418,
														"indexExpression": {
															"argumentTypes": null,
															"id": 417,
															"name": "partner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "984:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "960:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 423,
																"name": "amountToSend",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "1032:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 419,
																	"name": "withdrawPartnerBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "995:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 421,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 420,
																	"name": "partner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "1019:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "995:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "995:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "995:50:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "960:85:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "960:85:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3ccfd60b",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:2:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "603:0:1"
									},
									"scope": 445,
									"src": "576:476:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "1115:2:1",
										"statements": []
									},
									"documentation": null,
									"id": 432,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1095:2:1"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1115:0:1"
									},
									"scope": 445,
									"src": "1088:29:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1205:45:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 439,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -28,
																"src": "1230:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Denial_$445",
																	"typeString": "contract Denial"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Denial_$445",
																	"typeString": "contract Denial"
																}
															],
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1222:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 437,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1222:7:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1222:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1222:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 436,
												"id": 442,
												"nodeType": "Return",
												"src": "1215:28:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "8b7afe2e",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:2:1"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 444,
												"src": "1199:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1199:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1198:6:1"
									},
									"scope": 445,
									"src": "1151:99:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 472,
							"src": "117:1135:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 471,
							"linearizedBaseContracts": [
								471
							],
							"name": "Attack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 447,
									"mutability": "mutable",
									"name": "target",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 471,
									"src": "1275:13:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Denial_$445",
										"typeString": "contract Denial"
									},
									"typeName": {
										"contractScope": null,
										"id": 446,
										"name": "Denial",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 445,
										"src": "1275:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Denial_$445",
											"typeString": "contract Denial"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "1328:32:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 452,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "1338:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Denial_$445",
															"typeString": "contract Denial"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 453,
														"name": "_target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "1346:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Denial_$445",
															"typeString": "contract Denial"
														}
													},
													"src": "1338:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Denial_$445",
														"typeString": "contract Denial"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "1338:15:1"
											}
										]
									},
									"documentation": null,
									"id": 457,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "_target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "1306:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Denial_$445",
													"typeString": "contract Denial"
												},
												"typeName": {
													"contractScope": null,
													"id": 448,
													"name": "Denial",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 445,
													"src": "1306:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Denial_$445",
														"typeString": "contract Denial"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1305:16:1"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1328:0:1"
									},
									"scope": 471,
									"src": "1294:66:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "1399:57:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 465,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1443:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Attack_$471",
																		"typeString": "contract Attack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Attack_$471",
																		"typeString": "contract Attack"
																	}
																],
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1435:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 463,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1435:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1435:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 460,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "1409:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Denial_$445",
																"typeString": "contract Denial"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setWithdrawPartner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 384,
														"src": "1409:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1409:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "1409:40:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "9e5faafc",
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attack",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:2:1"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1399:0:1"
									},
									"scope": 471,
									"src": "1366:90:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 472,
							"src": "1254:204:1"
						}
					],
					"src": "32:1426:1"
				},
				"id": 1
			}
		}
	}
}